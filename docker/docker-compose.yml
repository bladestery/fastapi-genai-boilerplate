version: '3.9'

services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi-app
    ports:
      - "${PORT}:${PORT}"
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - prometheus
      - redis
    networks:
      - monitoring
    env_file:
      - .env

  celery:
    build:
      context: .
      dockerfile: celery.Dockerfile
    container_name: celery-worker
    depends_on:
      - redis
    networks:
      - monitoring
    env_file:
      - .env

  redis:
    image: redis/redis-stack:latest
    container_name: redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
      - "8001:8001"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - monitoring
    env_file:
      - .env

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9091:9091"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - monitoring
    env_file:
      - .env

  loki:
    image: grafana/loki:2.9.2
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:2.9.2
    container_name: promtail
    volumes:
      - /var/log:/var/log
      - /etc/machine-id:/etc/machine-id
      - ./docker/promtail/promtail-config.yml:/etc/promtail/promtail-config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/promtail-config.yml
    depends_on:
      - loki
    networks:
      - monitoring

volumes:
  grafana_data:

networks:
  monitoring:
    driver: bridge
